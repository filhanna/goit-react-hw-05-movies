{"version":3,"file":"static/js/664.297007fc.chunk.js","mappings":"8PAEMA,EAAS,mCAAG,WAAMC,GAAN,6EACA,mCACC,+BAFD,SAGWC,EAAAA,EAAAA,IAAA,UADV,+BACU,kBACJD,EADI,oBAFX,qCADA,cAGVE,EAHU,yBAOTA,EAAaC,MAPJ,2CAAH,sDASf,I,SCuDA,EA7DqB,WAAO,IAAD,IACzB,GAAgCC,EAAAA,EAAAA,UAAS,CAAC,GAA1C,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACQR,GAAYS,EAAAA,EAAAA,MAAZT,QACFU,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAiBpD,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,6GAEyBjB,EAAUC,GAFnC,OAEUiB,EAFV,OAIIX,EAAYW,GACZT,EAAU,YALd,gDAOIU,QAAQC,IAAR,MAPJ,0DAFc,sBACdX,EAAU,WADI,mCAYdY,EACD,GAAE,CAACpB,KAGF,8BACc,aAAXO,IACC,4BACE,SAAC,KAAD,CAAMc,GAAIT,EAAaU,QAAvB,+BACA,4BACE,gBACEC,IAAK,kCAAoClB,EAASmB,YAClDC,IAAKpB,EAASqB,SAEhB,uBAAIrB,EAASqB,SACb,wCAAgBC,KAAKC,MAAMvB,EAASwB,kBACpC,qCACA,6BAAKxB,EAASyB,aACd,mCACA,wBACGzB,EAAS0B,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACnB,wBAAcA,GAALD,EADU,UAKzB,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMZ,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAc,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,UAMX,C","sources":["servises/getMovies.js","pages/DetalisMovie/DetalisMovie.js"],"sourcesContent":["import axios from 'axios';\n\nconst getMovies = async movieId => {\n  const API_KEY = '233807a8ffc50a65007330f29276706a';\n  const BASE_URL = 'https://api.themoviedb.org/3';\n  const DetalisMovie = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n\n  return DetalisMovie.data;\n};\nexport default getMovies;\n","import { useRef, useState, useEffect } from 'react';\nimport { Suspense } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport getMovies from 'servises/getMovies';\n\nconst DetalisMovie = () => {\n  const [oneMovie, setOneMovie] = useState({});\n  const [status, setStatus] = useState('');\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    setStatus('pending');\n    async function fetchMovies() {\n      try {\n        const result = await getMovies(movieId);\n\n        setOneMovie(result);\n        setStatus('resolved');\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchMovies();\n  }, [movieId]);\n\n  return (\n    <>\n      {status === 'resolved' && (\n        <div>\n          <Link to={backLinkHref.current}> ‚Üê Go back </Link>\n          <div>\n            <img\n              src={`http://image.tmdb.org/t/p/w780/` + oneMovie.poster_path}\n              alt={oneMovie.title}\n            ></img>\n            <p>{oneMovie.title}</p>\n            <p>Use Score : {Math.round(oneMovie.vote_average)}</p>\n            <p>Owerview</p>\n            <p> {oneMovie.overview}</p>\n            <p>Genres</p>\n            <ul>\n              {oneMovie.genres.map(({ id, name }) => (\n                <li key={id}>{name}</li>\n              ))}\n            </ul>\n          </div>\n          <p>Additional information</p>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default DetalisMovie;\n"],"names":["getMovies","movieId","axios","DetalisMovie","data","useState","oneMovie","setOneMovie","status","setStatus","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","result","console","log","fetchMovies","to","current","src","poster_path","alt","title","Math","round","vote_average","overview","genres","map","id","name","Suspense","fallback"],"sourceRoot":""}