{"version":3,"file":"static/js/820.195e543e.chunk.js","mappings":"iOA+DA,UA3De,WAAO,IAAD,EACbA,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BL,EAAAA,EAAAA,UAASI,EAAaE,IAAI,UAAY,IAAhE,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAUN,EAAaE,IAAI,UACxBK,MAAK,SAAAC,GAAQ,OAAIV,EAAgBU,EAApB,IACbC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,IACTG,SACJ,GAAE,CAACb,IAEJ,IAAMM,EAAS,mCAAG,WAAMQ,GAAN,6EACA,mCACC,+BAFD,SAGWC,EAAAA,EAAAA,IAAA,UADV,+BACU,iBAAsC,CAC/DC,OAAQ,CACNC,QAJY,mCAKZd,MAAOW,KANK,cAGVI,EAHU,yBASTA,EAAaC,MATJ,2CAAH,sDAoBf,OACE,4BACE,kBAAMC,SAViB,SAAAC,GAEzB,GADAA,EAAEC,iBACY,KAAVnB,EACF,OAAOF,EAAgB,CAAC,GAE1BA,EAAgB,CAAEE,MAAAA,GAAS,CAAEoB,SAAS,GACvC,EAIG,WACE,kBACEC,KAAK,OACLC,MAAOtB,EACPuB,SAAU,SAAAL,GAAC,OAAIjB,EAASiB,EAAEM,OAAOF,MAAtB,KAGb,mBAAQD,KAAK,SAAb,wBAEF,kCACG3B,EAAa+B,eADhB,aACG,EAAsBC,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAChC,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMxC,GAA1C,SACGqC,KAFID,EAMZ,QAIR,C","sources":["pages/Movies/Movies.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [moviesObject, setMoviesObject] = useState({});\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(searchParams.get('query') || '');\n\n  useEffect(() => {\n    getMovies(searchParams.get('query'))\n      .then(responce => setMoviesObject(responce))\n      .catch(err => console.log(err))\n      .finally();\n  }, [searchParams]);\n\n  const getMovies = async queryString => {\n    const API_KEY = '233807a8ffc50a65007330f29276706a';\n    const BASE_URL = 'https://api.themoviedb.org/3';\n    const DetalisMovie = await axios.get(`${BASE_URL}/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query: queryString,\n      },\n    });\n    return DetalisMovie.data;\n  };\n\n  const updateSearchParams = e => {\n    e.preventDefault();\n    if (query === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query }, { replace: true });\n  };\n\n  return (\n    <div>\n      <form onSubmit={updateSearchParams}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n        />\n\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {moviesObject.results?.map(({ id, title }) => {\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["location","useLocation","useState","moviesObject","setMoviesObject","useSearchParams","searchParams","setSearchParams","get","query","setQuery","useEffect","getMovies","then","responce","catch","err","console","log","finally","queryString","axios","params","api_key","DetalisMovie","data","onSubmit","e","preventDefault","replace","type","value","onChange","target","results","map","id","title","to","state","from"],"sourceRoot":""}